using System;
using System.Collections;
using System.Collections.Generic;

namespace Poker
{
    class Program
    {
            public static int handSize = 0;
        static void Main()
        {
            Console.WriteLine("Enter any key to deal, or 'x' to exit");
            string input = Console.ReadLine();
            if (input.ToLower() != "x")
            {
              Deck deck = new Deck();
              deck = FisherYates.Shuffle(deck);
              Console.WriteLine("How many players?");
              int players = Convert.ToInt32(Console.ReadLine());
              Console.WriteLine("How many cards?");
              handSize=Convert.ToInt32(Console.ReadLine());
              if (players * handSize > 52)
              {
                Console.WriteLine("Cannot deal more than 52 cards");
                Main();
              }
              else
              {
                Deal(players, handSize, deck);
                Console.WriteLine("Press enter to Exit to main menu");
                Console.ReadLine();
                Main();
              }
            }
        }
        static void Deal(int players2, int handSize2, Deck mydeck)
        {
          List<List<Card>> table = new List<List<Card>>();
          for (int i=0; i<players2; i++)
          {
            table.Add(new List<Card>());
            for (int k = 0; k<handSize2 ; k++)
            {
              table[i].Add(mydeck.cards[mydeck.cards.Length-1]);
              //Console.WriteLine(table[i]);
              Array.Resize(ref mydeck.cards, mydeck.cards.Length-1);
            }
            foreach(Card c in table[i])
            {
              Console.WriteLine(c.ToString());
            }
            if (i != players2-1) 
            {
              Console.WriteLine("Press enter to display next hand");
              Console.ReadLine();
            }
            else 
            {
              Console.WriteLine("Deal again? Y/N");
              string input2 = Console.ReadLine();
              if (input2.ToLower()=="y") 
              {
                Console.WriteLine("How many more cards?");
                int dealagainhand = Convert.ToInt32(Console.ReadLine());
                if (players2 * dealagainhand > mydeck.cards.Length)
                {
                  Console.WriteLine("Cannot deal more than 52 cards, returning to main");
                  Main();
                }
                else
                {
                  Deal(players2, dealagainhand, mydeck);
                }
              }
              else return;
            }
          }
    }
    public class Deck
    {    
        public Card[] cards = new Card[52];
        string[] numbers = new string[] { "2", "3", "4", "5", "6", "7", "8", "9", "10", "J", "Q", "K", "A" };
        public Deck()
        {
            int i = 0;
            foreach(string s in numbers)
            {
                cards[i] = new Card(Suits.Clubs, s);
                i++;

            }
            foreach (string s in numbers)
            {
                cards[i] = new Card(Suits.Spades, s);
                i++;

            }
            foreach (string s in numbers)
            {
                cards[i] = new Card(Suits.Hearts, s);
                i++;

            }
            foreach (string s in numbers)
            {
                cards[i] = new Card(Suits.Diamonds, s);
                i++;

            }
        }

        public Card[] Cards
        {
            get{return cards;}
        }
    } 
    public enum Suits 
    {
        Hearts,
        Diamonds,
        Spades,
        Clubs
    }
    public class Card
    {
        Suits suit;
        string cardvalue;
        public Card()
        {
        }
        public Card(Suits suit2, string cardvalue2)
        {
            suit = suit2;
            cardvalue = cardvalue2;
        }
        public override string ToString() 
        {
            return string.Format("{0} of {1}", cardvalue, suit);
        }
    }
    public static class FisherYates
    {
      static Random r = new Random();
      public static Deck Shuffle(Deck deck)
      {
        for (int n = 51; n > 0; --n)
        {
          int k = r.Next(n);
          Card temp = deck.cards[n];
          deck.cards[n] = deck.cards[k];
          deck.cards[k] = temp;
        }
        return deck;
      }
    }
} 
}
